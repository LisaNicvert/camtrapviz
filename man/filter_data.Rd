% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_data_wrangling.R
\name{filter_data}
\alias{filter_data}
\title{Filter camera trap data}
\usage{
filter_data(
  dat,
  spp_filter = NULL,
  spp_col = NULL,
  obs_filter = NULL,
  obs_col = NULL,
  cam_filter = NULL,
  cam_col_rec = NULL,
  cam_col_cam = cam_col_rec,
  daterange = NULL,
  custom_col = NULL,
  custom_filter = NULL,
  timestamp_col = NULL,
  time_col = NULL,
  date_col = NULL,
  tz = NULL,
  cameras_as_factor = FALSE
)
}
\arguments{
\item{dat}{The data to filter. It can be either a list with one component \verb{$data}
or a \code{datapackage} object (inheriting list). Either way, the data
are in the \verb{$data} slot with two components:
\itemize{
\item \verb{$deployments} (cameras table)
\item \verb{$observations} (records table)
}}

\item{spp_filter}{Species to filter from the data}

\item{spp_col}{Name of the species column}

\item{obs_filter}{Observation types to filter from the data}

\item{obs_col}{Name of the observation column}

\item{cam_filter}{Cameras to filter from the data}

\item{cam_col_rec}{Name of the cameras column in records table (\code{dat$data$observations}).}

\item{cam_col_cam}{Name of the cameras column in cameras table (\code{dat$data$deployments}).
Defaults to the same value as \code{cam_col_rec}.}

\item{daterange}{Date range to filter on for the data (will filter
observations' times so that \code{times >= daterange[1]} and
\code{times <= daterange[2]}). Can be either a Date or a POSIX.}

\item{custom_col}{name of a custom column in to filter values in
\code{dat$data$observations}.}

\item{custom_filter}{values to filter out in the custom column \code{custom_col}.}

\item{timestamp_col}{Name of the datetime column (must be coercible to POSIX).
It is not needed if \code{date_col} and \code{time_col} are provided.}

\item{time_col}{Name of the time column. It is not needed if \code{timestamp_col}
is provided.}

\item{date_col}{Name of the date column. It is not needed if \code{timestamp_col}
is provided.}

\item{tz}{Timezone for the data bounds. If not provided, will try to
find the timezone in \code{daterange} (if it is a POSIX), then in
\code{timestamp_col} (if provided), and finally if no timezone is
present it will default to UTC (Etc/GMT).
For the filtering step, if needed datetimes in \code{timestamp_col} can be
converted to \code{tz} but the output data will not be affected.}

\item{cameras_as_factor}{Transform cameras as factors?}
}
\value{
The filtered data. Species and dates remove data only in \code{dat$data$observations},
but cameras also remove cameras from \code{dat$data$deployments}.
}
\description{
Allows to filter camera trap data observations and
cameras metadata based on species, cameras and dates.
}
\details{
For the \code{spp_filter}, \code{cam_filter}, \code{daterange} and \code{custom_col} values:
if they are \code{NULL}, data are not filtered on that condition.
Also note that e.g. if all species are in \code{spp_filter}, then
all species will be filtered out.
}
\examples{
data("recordTableSample", package = "camtrapR")
recordTableSample$DateTimeOriginal <- as.POSIXct(recordTableSample$DateTimeOriginal)
data("camtraps", package = "camtrapR")
dat <- list(data = list(observations = recordTableSample,
                        deployments = camtraps))
# Filter out data for species PBE and VTA, camera Station A and keep
# only data from 2009-05-01 to 2009-05-15.
filter_data(dat, 
            spp_col = "Species", 
            spp_filter = c("PBE", "VTA"),
            cam_col_rec = "Station", 
            cam_filter = "StationA",
            daterange = as.Date(c("2009-05-01", "2009-05-15")),
            timestamp_col = "DateTimeOriginal")
}
\seealso{
\href{https://lisanicvert.github.io/camtrapviz/articles/filter-data.html}{\code{vignette("filter-data", package = "camtrapviz")}},
\code{\link[=filter_cameras_in_both_tables]{filter_cameras_in_both_tables()}}
}
